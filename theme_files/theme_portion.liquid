<!doctype html>
<html
  class="no-js{% if request.design_mode %} shopify-design-mode{% endif %}"
  lang="{{ request.locale.iso_code }}"
>
  <head>
    {{ 'base.css' | asset_url | stylesheet_tag }}

    {%- if settings.favicon != blank -%}
      <link
        rel="icon"
        type="image/png"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
      >
    {%- endif -%}

    {% comment %} This a way to wait for main content to load when navigating to a new page so that the view transitions can work consistently {% endcomment %}
    <link
      rel="expect"
      href="#MainContent"
      blocking="render"
      id="view-transition-render-blocker"
    >

    {%- render 'meta-tags' -%}
    {%- render 'fonts' -%}
    {%- render 'scripts' -%}
    {%- render 'theme-styles-variables' -%}
    {%- render 'color-schemes' -%}

    {% if request.design_mode %}
      {%- render 'theme-editor' -%}
    {% endif %}

    {{ content_for_header }}
  </head>

  <body class="page-width-{{ settings.page_width }} card-hover-effect-{{ settings.card_hover_effect }}">
    {% render 'skip-to-content-link', href: '#MainContent', text: 'accessibility.skip_to_text' %}
    <div id="header-group">
      {% sections 'header-group' %}
    </div>

    <main
      id="MainContent"
      class="content-for-layout"
      role="main"
      data-page-transition-enabled="{{ settings.page_transition_enabled }}"
      data-product-transition="{{ settings.transition_to_main_product }}"
      data-template="{{ template }}"
    >
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    {% render 'search-modal' %}

    {% # theme-check-disable ParserBlockingScript %}
    <script src="{{ 'critical.js' | asset_url }}"></script>
    {% # theme-check-enable ParserBlockingScript %}

    {% if settings.quick_add or settings.mobile_quick_add %}
      {% render 'quick-add-modal' %}
    {% endif %}

    
{% comment %}
  (function(){
  const vehicle = localStorage.getItem('selectedVehicle');
  if (!vehicle) return;

  document.cookie = `my_vehicle=${vehicle}; path=/; max-age=${60*60*24*7}`;

  const path = window.location.pathname;
  const isCollection = path === '/collections/all' || path.startsWith('/collections/all/');
  if (isCollection) {
    const parts = path.split('/');
    const currentTag = parts[3] || '';

    if (currentTag !== vehicle) {
      window.location.replace(`/collections/all/${vehicle}`);
    }
  }
})();
{% endcomment %}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const vehicleTag = localStorage.getItem('selectedVehicle');
    if (!vehicleTag) return;

    // Modify only links to product pages, and only if _vehicle param isn't already there
    document.querySelectorAll('a[href*="/products/"]').forEach(link => {
      try {
        const url = new URL(link.href);
        if (!url.searchParams.has('_vehicle')) {
          url.searchParams.set('_vehicle', vehicleTag);
          link.href = url.toString();
        }
      } catch (e) {
        // Ignore malformed URLs (e.g., relative links)
      }
    });
  });
</script>
  </body>
</html>
